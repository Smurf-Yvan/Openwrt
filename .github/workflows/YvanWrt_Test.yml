name: YvanWrt-CI Test

on:
  workflow_dispatch:
  schedule:
    - cron: 0 2 * * 1

permissions: write-all

jobs:

  build_YvanWrt:

    name: Build YvanWrt Firmware

    runs-on: ubuntu-latest

    steps:
      - name: Space cleanup and Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap*
          sudo -E apt -y full-upgrade
          sudo -E apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache clang cmake cpio curl device-tree-compiler flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses-dev libncurses-dev libpython3-dev libreadline-dev libssl-dev libtool llvm lrzsz genisoimage msmtp ninja-build p7zip p7zip-full patch pkgconf python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E systemctl daemon-reload
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          sudo -E timedatectl set-timezone "Asia/Shanghai"

      - name: Checkout YvanWrt
        uses: actions/checkout@v3

      - name: Update feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config
          cat >> .config <<EOF
          #
          # ========================固件定制部分========================
          #
          #
          # ========================固件定制部分========================
          #
          CONFIG_TARGET_mediatek=y
          CONFIG_TARGET_mediatek_filogic=y
          CONFIG_TARGET_mediatek_filogic_DEVICE_xiaomi_redmi-router-ax6000=y
          CONFIG_BATMAN_ADV_BATMAN_V=y
          CONFIG_BATMAN_ADV_BLA=y
          CONFIG_BATMAN_ADV_DAT=y
          CONFIG_BATMAN_ADV_MCAST=y
          CONFIG_MBEDTLS_AES_C=y
          CONFIG_MBEDTLS_CMAC_C=y
          CONFIG_MBEDTLS_DES_C=y
          CONFIG_MBEDTLS_ECP_DP_CURVE25519_ENABLED=y
          CONFIG_MBEDTLS_ECP_DP_SECP256K1_ENABLED=y
          CONFIG_MBEDTLS_ECP_DP_SECP256R1_ENABLED=y
          CONFIG_MBEDTLS_ECP_DP_SECP384R1_ENABLED=y
          CONFIG_MBEDTLS_ENTROPY_FORCE_SHA256=y
          CONFIG_MBEDTLS_GCM_C=y
          CONFIG_MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED=y
          CONFIG_MBEDTLS_KEY_EXCHANGE_ECDHE_PSK_ENABLED=y
          CONFIG_MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED=y
          CONFIG_MBEDTLS_KEY_EXCHANGE_PSK_ENABLED=y
          CONFIG_MBEDTLS_NIST_KW_C=y
          CONFIG_MBEDTLS_RSA_NO_CRT=y
          CONFIG_PACKAGE_batctl-default=y
          CONFIG_PACKAGE_coreutils-sort=y
          CONFIG_PACKAGE_dawn=y
          CONFIG_PACKAGE_kmod-batman-adv=y
          CONFIG_PACKAGE_kmod-crypto-crc32c=y
          CONFIG_PACKAGE_kmod-lib-crc16=y
          CONFIG_PACKAGE_kmod-lib-crc32c=y
          # CONFIG_PACKAGE_kmod-nf-conntrack-netlink is not set
          CONFIG_PACKAGE_kmod-nls-base=y
          CONFIG_PACKAGE_libatomic=y
          CONFIG_PACKAGE_libgcrypt=y
          CONFIG_PACKAGE_libgpg-error=y
          CONFIG_PACKAGE_libltdl=y
          CONFIG_PACKAGE_liblua5.3=y
          CONFIG_PACKAGE_libncurses=y
          CONFIG_PACKAGE_libreadline=y
          # CONFIG_PACKAGE_luci-app-autoreboot is not set
          # CONFIG_PACKAGE_luci-app-ddns is not set
          # CONFIG_PACKAGE_luci-app-nlbwmon is not set
          # CONFIG_PACKAGE_luci-app-rclone_INCLUDE_rclone-ng is not set
          # CONFIG_PACKAGE_luci-app-rclone_INCLUDE_rclone-webui is not set
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks_Libev_Client is not set
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks_NONE_Server is not set
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks_Rust_Client is not set
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks_Rust_Server is not set
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray is not set
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Xray is not set
          # CONFIG_PACKAGE_luci-app-unblockmusic_INCLUDE_UnblockNeteaseMusic_Go is not set
          # CONFIG_PACKAGE_luci-app-vlmcsd is not set
          # CONFIG_PACKAGE_luci-app-wol is not set
          # CONFIG_PACKAGE_luci-i18n-haproxy-tcp-zh-cn is not set
          CONFIG_PACKAGE_openssh-sftp-server=y
          CONFIG_PACKAGE_luci-theme-argon=y
          CONFIG_PACKAGE_ttyd=y
          # CONFIG_PACKAGE_nlbwmon is not set
          CONFIG_PACKAGE_p910nd=y
          # CONFIG_PACKAGE_shadowsocks-libev-ss-local is not set
          # CONFIG_PACKAGE_shadowsocks-libev-ss-redir is not set
          # CONFIG_PACKAGE_shadowsocks-rust-sslocal is not set
          # CONFIG_PACKAGE_shadowsocks-rust-ssserver is not set
          CONFIG_PACKAGE_terminfo=y
          CONFIG_PACKAGE_umdns=y
          # CONFIG_PACKAGE_v2ray-core is not set
          # CONFIG_PACKAGE_vlmcsd is not set
          # CONFIG_PACKAGE_wol is not set
          # CONFIG_PACKAGE_xray-core is not set
          CONFIG_PACKAGE_kmod-inet-diag=y
          CONFIG_PACKAGE_kmod-netlink-diag=y
          CONFIG_PACKAGE_kmod-tun=y
          CONFIG_PACKAGE_iptables-nft=y
          #
          # ========================固件定制部分结束========================
          #
          EOF
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

      - name: Download packages
        run: make download -j16

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j16 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Upload buildinfo
        uses: actions/upload-artifact@v3
        with:
          name: YvanWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Upload package
        uses: actions/upload-artifact@v3
        with:
          name: YvanWrt_package
          path: ./artifact/package/

      - name: Upload firmware
        uses: actions/upload-artifact@v3
        with:
          name: YvanWrt_firmware
          path: ./bin/targets/

      - name: Compress
        working-directory: ${{ github.workspace }}/bin/targets
        run: |
          zip -r YvanWrt_Test_${{ github.run_id }}.zip ./*

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: YvanWrt_Test_${{ github.run_id }}
          release_name: YvanWrt_Test_${{ github.run_id }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/bin/targets/YvanWrt_Test_${{ github.run_id }}.zip
          asset_name: YvanWrt_Test_${{ github.run_id }}.zip
          asset_content_type: application/zip
